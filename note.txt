1. rails new Authentication_App -T
2.rails g controller StaticPages index help
3. install gem 'foundation'
4.rails g foundation:install

      uncomment         @include motion-ui-transitions;
                        @include motion-ui-animations;    at stylesheets/foundation_and_overrides.scss

create : customized_style.scss

                          .columns {
                            text-align: center;

                          }

put       at index and help.html.erb

                          <div class = "row">
                            <div class = "small-12 medium-12 large-12 columns">     <= columns is linked to the above
                            <h1> Welcome to Authentication Page </h1>
                          </div>


2. Creat User Model

Paths are related to actions and are based on the CRUD model

i. rails g resource User first_name last_name email password_digest
                        invoke  active_record
                        create    db/migrate/20170519053026_create_users.rb
                        create    app/models/user.rb
                        invoke  controller
                        create    app/controllers/users_controller.rb
                        invoke    erb
                        create      app/views/users
                        invoke    helper
                        create      app/helpers/users_helper.rb
                        invoke    assets
                        invoke      coffee
                        create        app/assets/javascripts/users.coffee
                        invoke      scss
                        create        app/assets/stylesheets/users.scss
                        invoke  resource_route
                         route    resources :users

3. 1st and lastname validation

class UsersController < ApplicationController


                                  def index
                                  end

                                  def new
                                    @user = User.new
                                  end

                                  def create
                                    @user = User.new
                                    if @user.save
                                      redirect_to root_path
                                    else
                                      render 'new'
                                  end
                                end


          at users/ new.html.erb : do this to create form          users are create using resource

                                <%= provide(:title, 'Sign Up') %>

                                <div class = "row">
                                  <div class ="small-10 small-centered medium-4 medium-centered columns">
                                    <h2 id= "sign_up" > Sign Up </h2>
                                    <%= form_for (@user) do |f| %>

                                      <%= f.label :first_name %>
                                      <%= f.text_field :first_name %>

                                      <%= f.label :last_name %>
                                      <%= f.text_field :last_name %>

                                      <%= f.label :email %>
                                      <%= f.email_field :email %>

                                      <%= f.label :password %>
                                      <%= f.password_field :password %>

                                      <%= f.label :password_confirmation, 'Please confirm password' %>
                                      <%= f.password_field :password_confirmation %>

                                      <%= f.submit 'Create Account', class: "expanded button" %>
                                    <%end%>
                                  </div>
                                </div>


create rspec

                                i.gems 'rspec-rails'
                                ii. rails g rspec:install
                                create  .rspec
                                create  spec
                                create  spec/spec_helper.rb
                                create  spec/rails_helper.rb


          at .rspec
          --color - to give the error message color

          -- format documentation     => it give us more readable information when we test

at model user.rb

                                  class User < ApplicationRecord
                                    validates :first_name, presence: true
                                    validates :last_name, presence: true
                                    validates :email, presence: true
                                  end


create   spec/models/user_spec.rb

                                      require 'rails_helper'

                                      describe User, type: :model do
                                        describe 'validations' do

                                          before do
                                            @user = User.create(first_name: 'Alex', last_name: 'Chew', email: 'alex@alex.com')
                                          end

                                          it 'can be created' do
                                            expect(@user).to be_valid
                                          end

                                          it 'cannot be created without a first name' do
                                            @user.first_name = nil
                                            expect(@user).not_to be_valid
                                          end

                                          it 'cannot be created without a last name' do
                                            @user.last_name = nil
                                            expect(@user).not_to be_valid
                                            end

                                          it 'cannot be created without a email' do
                                            @user.email = nil
                                            expect(@user).not_to be_valid
                                              end

                                          it 'cannot have a short first_name' do
                                            @user.first_name = 'a' * 2
                                            expect(@user).not_to be_valid
                                              end

                                          it 'cannot have a long first_name' do
                                            @user.first_name = 'a' * 25
                                            expect(@user).not_to be_valid
                                              end

                                          it 'cannot have a short last_name' do
                                                @user.last_name = 'a' * 2
                                                expect(@user).not_to be_valid
                                                  end

                                          it 'cannot have a long last_name' do
                                                @user.last_name = 'a' * 25
                                                expect(@user).not_to be_valid
                                                  end
                                        end
                                      end

at model => user.rb

                                            class User < ApplicationRecord
                                              validates :first_name, presence: true, length: {minimum: 3, maximum: 20}
                                              validates :last_name, presence: true, length: {minimum: 3, maximum: 20}
                                              validates :email, presence: true
                                            end
